{"ast":null,"code":"var _jsxFileName = \"/var/www/html/products/src/pages/PaginationComponenet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaginationComponenet = ({\n  total = 0,\n  itemsPerPage = 10,\n  currentPage = 1,\n  onPageChange\n}) => {\n  _s();\n\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    if (total > 0 && itemsPerPage > 0) setTotalPages(Math.ceil(total / itemsPerPage));\n  }, [total, itemsPerPage]);\n  const paginationItems = useMemo(() => {\n    const pages = [];\n\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: i === currentPage,\n        onClick: () => onPageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this));\n    }\n\n    return pages;\n  }, [totalPages, currentPage]);\n\n  if (totalPages === 0) {}\n\n  return /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n      onClick: () => onPageChange(currentPage - 1),\n      disabled: currentPage === 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), paginationItems, /*#__PURE__*/_jsxDEV(Pagination.Next, {\n      onClick: () => onPageChange(currentPage + 1),\n      disabled: currentPage === totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaginationComponenet, \"MKlQ5ncFBmedXV2GyHherFj+chg=\");\n\n_c = PaginationComponenet;\nexport default PaginationComponenet;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationComponenet\");","map":{"version":3,"sources":["/var/www/html/products/src/pages/PaginationComponenet.js"],"names":["React","useEffect","useState","Pagination","PaginationComponenet","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","Math","ceil","paginationItems","useMemo","pages","i","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAC,CAAR;AAAWC,EAAAA,YAAY,GAAC,EAAxB;AAA4BC,EAAAA,WAAW,GAAC,CAAxC;AAA2CC,EAAAA;AAA3C,CAAD,KAA+D;AAAA;;AAExF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAII,KAAK,GAAG,CAAR,IAAaC,YAAY,GAAE,CAA/B,EACII,aAAa,CAACC,IAAI,CAACC,IAAL,CAAUP,KAAK,GAAGC,YAAlB,CAAD,CAAb;AACP,GAHQ,EAGP,CAACD,KAAD,EAAQC,YAAR,CAHO,CAAT;AAKA,QAAMO,eAAe,GAAGC,OAAO,CAAC,MAAM;AAClC,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAIP,UAAlB,EAA8BO,CAAC,EAA/B,EAAkC;AAC9BD,MAAAA,KAAK,CAACE,IAAN,eAAW,QAAC,UAAD,CAAY,IAAZ;AAAyB,QAAA,MAAM,EAAED,CAAC,KAAKT,WAAvC;AAAoD,QAAA,OAAO,EAAE,MAAMC,YAAY,CAACQ,CAAD,CAA/E;AAAA,kBACNA;AADM,SAAsBA,CAAtB;AAAA;AAAA;AAAA;AAAA,cAAX;AAGH;;AACD,WAAOD,KAAP;AACH,GAR8B,EAQ5B,CAAEN,UAAF,EAAcF,WAAd,CAR4B,CAA/B;;AAUA,MAAIE,UAAU,KAAK,CAAnB,EAAqB,CAEpB;;AAED,sBACI,QAAC,UAAD;AAAA,4BACI,QAAC,UAAD,CAAY,IAAZ;AACI,MAAA,OAAO,EAAG,MAAMD,YAAY,CAAED,WAAW,GAAG,CAAhB,CADhC;AAEI,MAAA,QAAQ,EAAEA,WAAW,KAAK;AAF9B;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKM,eALL,eAMI,QAAC,UAAD,CAAY,IAAZ;AACI,MAAA,OAAO,EAAG,MAAML,YAAY,CAAED,WAAW,GAAG,CAAhB,CADhC;AAEI,MAAA,QAAQ,EAAEA,WAAW,KAAKE;AAF9B;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApCD;;GAAML,oB;;KAAAA,oB;AAsCN,eAAeA,oBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Pagination from \"react-bootstrap/Pagination\"\n\nconst PaginationComponenet = ({ total=0, itemsPerPage=10, currentPage=1, onPageChange }) => {\n\n    const [totalPages, setTotalPages] = useState(0);\n\n    useEffect(()=>{\n        if( total > 0 && itemsPerPage >0)\n            setTotalPages(Math.ceil(total / itemsPerPage))\n    },[total, itemsPerPage])\n\n    const paginationItems = useMemo(() => {\n        const pages = [];\n        for(let i=1; i <= totalPages; i++){\n            pages.push(<Pagination.Item key={i} active={i === currentPage} onClick={() => onPageChange(i)}>\n                {i}\n            </Pagination.Item>);\n        }\n        return pages;\n    }, [ totalPages, currentPage ])\n\n    if( totalPages === 0){\n        \n    }\n\n    return (\n        <Pagination>\n            <Pagination.Prev \n                onClick={ () => onPageChange( currentPage - 1) }\n                disabled={currentPage === 1}    \n            />\n            {paginationItems}\n            <Pagination.Next \n                onClick={ () => onPageChange( currentPage + 1) }\n                disabled={currentPage === totalPages}\n            />\n        </Pagination>\n    )\n}\n\nexport default PaginationComponenet;\n"]},"metadata":{},"sourceType":"module"}