{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport MainComponent from '../components/MainComponent';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"fN8x5Yp0b2dZEBXkEth9Ky/Ylmk=\");\n\nexport default useForm;","map":{"version":3,"sources":["/var/www/html/products/src/loginPage/useForm.js"],"names":["useState","useEffect","useHistory","MainComponent","useForm","callback","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleSubmit","event","preventDefault","console","log","handleChange","persist","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AAEtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,IAAoCJ,YAAxC,EAAsD;AACpDN,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACI,MAAD,CAJM,CAAT;;AAMA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXR,IAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACD,GALD;;AAOA,QAAMc,YAAY,GAAIJ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACK,OAAN;AACAd,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACU,KAAK,CAACM,MAAN,CAAaC,IAAd,GAAqBP,KAAK,CAACM,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;AACD,GAHD;;AAKA,SAAO;AACLJ,IAAAA,YADK;AAELL,IAAAA,YAFK;AAGLT,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CA9BD;;GAAML,O;;AAgCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport MainComponent from '../components/MainComponent';\n\nconst useForm = (callback, validate) => {\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values) \n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n  }\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}