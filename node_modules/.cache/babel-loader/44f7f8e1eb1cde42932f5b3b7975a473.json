{"ast":null,"code":"var _jsxFileName = \"/var/www/html/products/src/PaginationComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst renderData = data => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.map((todo, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nfunction PaginationComponent() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(json => setData(json));\n  }, []);\n\n  const handleClick = event => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      id: number,\n      onClick: handleClick,\n      className: currentPage == number ? \"active\" : null,\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit == 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }, this);\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }, this), renderData(data), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pageNumbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevbtn,\n          disabled: currentPage == pages[0] ? true : false,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), pageDecrementBtn, renderPageNumbers, pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextbtn,\n          disabled: currentPage == pages[pages.length - 1] ? true : false,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaginationComponent, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = PaginationComponent;\nexport default PaginationComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"sources":["/var/www/html/products/src/PaginationComponent.js"],"names":["React","useEffect","useState","renderData","data","map","todo","index","title","PaginationComponent","setData","fetch","then","response","json","handleClick","event","setcurrentPage","Number","target","id","renderPageNumbers","pages","number","currentPage","handleNextbtn","maxPageNumberLimit","setmaxPageNumberLimit","pageNumberLimit","setminPageNumberLimit","minPageNumberLimit","handlePrevbtn","pageIncrementBtn","length","pageDecrementBtn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Style.css\";\n\nconst renderData = (data) => {\n  return (\n    <ul>\n      {data.map((todo, index) => {\n        return <li key={index}>{todo.title}</li>;\n      })}\n    </ul>\n  );\n};\n\nfunction PaginationComponent() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\n      .then((response) => response.json())\n      .then((json) => setData(json));\n  }, []);\n  \n  const handleClick = (event) => {\n    setcurrentPage(Number(event.target.id));\n  };\n  \n   const renderPageNumbers = pages.map((number) => { \n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage == number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    \n  });\n  \n    const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit == 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n  \n    let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n  \n\n  return (\n    <>\n      <h1>Todo List</h1> <br />\n      {renderData(data)}\n\n      <ul className=\"pageNumbers\">\n        <li>\n          <button\n            onClick={handlePrevbtn}\n            disabled={currentPage == pages[0] ? true : false}\n          >\n            Prev\n          </button>\n        </li>\n        {pageDecrementBtn}\n        {renderPageNumbers}\n        {pageIncrementBtn}\n        <li>\n          <button\n            onClick={handleNextbtn}\n            disabled={currentPage == pages[pages.length - 1] ? true : false}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n\n    </>\n  );\n}\n\nexport default PaginationComponent;"]},"metadata":{},"sourceType":"module"}